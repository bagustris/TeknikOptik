function [yd, Itot] = Huygens2;% HUYGENS2   Calculates the intensity distribution%    for a number of slits.  Specially modified for use with%    Computational Optoelectronics Exercise 2. % -----------------------------------------------% Set up the optical and mathematical variables % -----------------------------------------------% All optical variables are global and set elsewhere  global lambda scrnDist scrnWdth slitWdth slitSepn numSlits;% Numbers of sources and detectors can be changed easily  M =  26;   % Number of sources  N = 151;   % Number of detectors.  K = numSlits;  % Number of slits% ------------------------------------------% Specify the source points% ------------------------------------------% xs,ys are coordinates of the source (row vectors)% All the sources lie along the y-axis (x=0)  xs  = zeros(1,K*M);  ys  = [];  % There are K slits, each one consists of M sources% Each slit represented by a (1xM) vector    ysSlit  = [-slitWdth/2: slitWdth/(M-1): +slitWdth/2];  % The vector representing all slits together has K*M elements. % Concatenate K vectors each of size (1xM)  for count=1:K,      ys = [ys, slitSepn*count + ysSlit];  end;   % for numSlits  % Adjust centers of slits symmetrically about origin  ys = ys - (K+1)/2*slitSepn;  % The amplitudes of the field at the sources are equal   A  = 1;   % ------------------------------------------% Specify the detector points% ------------------------------------------% xd,yd are coordinates of the source (column vectors)% All the detectors lie along the line (y=scrnDist)  xd = scrnDist*ones(N,1);  yd = [-scrnWdth/2 : scrnWdth/(N-1) : +scrnWdth/2]'; % -------------------------------------------------% Calculate distances between sources and detectors% -------------------------------------------------% There are MxN values of (xd-xs) and (yd-ys).% Represent each by an 2MxN matrix.  Xdifferences = xd*ones(1,K*M) - ones(N,1)*xs;   Ydifferences = yd*ones(1,K*M) - ones(N,1)*ys;  % Calculate the MxN distances between detectors and sources  r = sqrt(Xdifferences.^2 + Ydifferences.^2);% -------------------------------------------------% Calculate fields between sources and detectors% -------------------------------------------------% Calculate the MxN fields at each detector arising % from each source, at times t=0 and t=T/4.  E0 = A*cos(2*pi*r/lambda)./r;  E4 = A*sin(2*pi*r/lambda)./r;% Calculate the total fields at each detector at times% t=0 and t=T/4.  There are N of these.  E0tot = sum(E0,2);  E4tot = sum(E4,2);% Intensity of the field at the N detectors  Itot = (E0tot.^2 + E4tot.^2)/2;return;